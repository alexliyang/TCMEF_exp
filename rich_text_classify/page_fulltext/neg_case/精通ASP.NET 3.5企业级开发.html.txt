收藏查看我的收藏0有用+1已投票0精通ASP.NET 3.5企业级开发编辑锁定本词条缺少名片图，补充相关内容使词条更完整，还能快速升级，赶紧来编辑吧！《精通ASP.NET3.5企业级开发》全书共分29章，内容涵盖了分析、设计、开发和测试这4个软件工程的主要步骤。通过4个实例（会员软件系统、客户关系管理系统CRM、办公自动化系统OA、网上书店系统）讲解了软件的开发过程。本书最大的特色在于实践知识多于理论知识，力求让读者通过亲自动手来掌握ASP.NET3.5新技术。书    名精通ASP.NET 3.5企业级开发作    者王岩ISBN9787115180179定    价52.00 元出版社人民邮电出版社出版时间2008开    本16目录1内容简介2目录3前言4书摘精通ASP.NET 3.5企业级开发内容简介编辑本书由浅入深、循序渐进地介绍了.NET3.5的新技术，包括新控件、新功能和新的类，还讲述到了Microsoft公司最新发行的LINQ查询方式，并简单介绍了其在VisualStudio2008中的应用情况。本书适用于初、中级.NET用户。没有接触过.NET的入门者可以轻松地阅读本书，而有过.NET开发经验的人学习本书，会了解ASP.NET3.5更强大的控件和更安全的类库，进一步掌握利用ASP.NET3.5技术开发网络应用的必要技能。精通ASP.NET 3.5企业级开发目录编辑第1章　用户需求的分析与处理　11.1　用户提出自己的需求　11.2　系统分析人员分析用户的需求　21.2.1　分析人员体验用户环境　21.2.2　分析并确定调研结果　31.3　用户与项目管理人员确定最终需求　41.4　根据最终需求确定工作环境　51.4.1　软件环境　51.4.2　硬件环境　5第2章　项目计划安排　72.1　项目计划软件　72.1.1　创建一个进度表　82.1.2　使用不同的图表显示项目进度　82.2　实现此项目需要的资源　102.3　如何写好项目计划安排表　112.4　前期的项目计划表　11第3章　概念性系统设计　133.1　概念设计的原则　133.2　将用户需求模块化　143.3　确定系统最终模块　153.4　根据模块划分完善项目计划表　17第4章　模块的详细设计　184.1　UML　184.1.1　为什么用UML　184.1.2　UML包括的内容　194.2　分析设计工具Visio　194.2.1　为什么用Visio　194.2.2　使用Visio设计模块　204.3　用图例实现设计　234.3.1　用例图实现业务流程的设计　244.3.2　类图实现静态模块结构的设计　264.3.3　类图与类图之间的关系　264.3.4　部署整个设计的架构　27第5章　数据库设计　285.1　罗列数据信息　285.2　根据数据信息构建表结构　295.3　数据库构建工具PowerDesigner　315.3.1　使用构建工具PowerDesigner　315.3.2　PowerDesigner的使用　315.4　用PowerDesigner构建设计好的数据表　335.5　生成数据库　34第6章　系统架构设计　366.1　三层架构的组成　366.2　数据访问层　386.2.1　数据访问逻辑组件　386.2.2　业务实体　386.2.3　数据访问代码分析　426.3　用户界面层分析设计　446.3.1　为什么要进行界面层设计　446.3.2　确定界面的风格　446.3.3　如何进行界面设计　446.4　小结　45第7章　开发前期项目准备　467.1　进入ASP.NET3.5的世界　467.1.1　ASP.NET3.5的优点　477.1.2　创建本实例的项目　477.2　版本控制工具VSS　487.2.1　VSS的使用　487.2.2　将项目部署到VSS　507.2.3　需要注意的问题　507.3　界面设计的相关文件　517.3.1　设计母版页　517.3.2　设计站点地图　527.3.3　设计皮肤文件　547.4　使用LINQtoSQLClasses实现数据访问组件　557.4.1　在项目中添加数据库连接　557.4.2　在项目中添加数据库映射类　567.4.3　LINQtoSQL在数据访问中的位置　567.5　小结　57第8章　会员卡类型管理模块　588.1　会员卡类型实体类　588.2　会员卡类型实体方法　608.3　会员卡类型管理功能具体实现　648.3.1　添加会员卡类型　658.3.2　修改会员卡类型名称　678.3.3　修改会员卡积分规则　688.3.4　获取卡类型积分规则　698.3.5　将导航地图与功能结合　698.4　技术要点分析　718.4.1　界面布局技术要点　718.4.2　业务实体的属性映射　728.4.3　StringBuild类的使用　728.4.4　使用.NET3.5的Lambda表达式　728.4.5　类型转换　738.4.6　partial关键字　738.4.7　枚举enum　738.4.8　跨页传递参数　748.4.9　判断会员卡类型名称是否重复　748.4.10　System.Linq命名空间　758.4.11　LINQ数据连接上下文　758.5　小结　75第9章　会员资料管理模块　769.1　会员资料实体类　769.2　会员资料实体方法　789.3　会员资料管理功能具体实现　829.3.1　添加验证数据功能　829.3.2　添加配置数据源功能　839.3.3　添加功能的代码设计　859.3.4　使用GridView控件修改会员资料　879.3.5　修改资料功能的代码及测试　899.3.6　获取会员资料界面设计　909.3.7　获取会员资料代码设计　929.3.8　会员资料管理功能集成测试　949.4　技术要点分析　959.4.1　界面布局技术要点　959.4.2　日期型数据　959.4.3　GridView控件中的列属性DataFormatString　969.4.4　AutoPostBack　969.4.5　页面验证　979.4.6　正则表达式　979.4.7　分页数据显示　989.4.8　数据源类型　999.5　小结　99第10章　商品管理模块　10010.1　商品信息实体类　10010.2　商品信息实体方法　10110.3　商品管理功能具体实现　10410.3.1　销售和退货界面设计　10510.3.2　销售和退货代码实现　10610.3.3　测试销售和退货功能　10710.3.4　积分反馈规则设计及实现　10810.3.5　积分反馈功能设计及实现　11310.3.6　商品管理功能集成测试　11510.4　技术要点分析　11510.4.1　界面布局技术要点　11510.4.2　DropDownList数据源的添加　11610.4.3　关联表实体的数据处理　11710.4.4　LinqDataSource自定义　11810.4.5　GridViewRow属性　11810.4.6　GridView控件的刷新　11910.5　小结　119第11章　会员卡积分管理模块　12011.1　积分管理类　12011.1.1　获取积分方法的实现　12011.1.2　测试获取积分功能　12311.1.3　积分处理方法的实现　12411.1.4　测试积分处理功能　12511.1.5　查询历史记录方法的实现　12611.1.6　测试查询历史记录功能　12711.2　积分管理功能集成测试　12911.2.1　为积分界面添加导航链接　12911.2.2　历史记录界面获取导航参数　12911.3　技术要点分析　13011.3.1　GridView控件的汇总　13011.3.2　SQLServer的CASE函数　13111.3.3　导航参数的设置和获取　13211.3.4　LINQ中的SUM求和　13311.3.5　调试技巧　13411.3.6　SqlDataReader类的使用　13511.3.7　C#的运算符　13611.3.8　switch关键字　13711.3.9　var关键字　13711.4　小结　138第12章　权限管理模块　13912.1　创建登录界面　13912.1.1　ASP.NET3.5的注册控件　14012.1.2　设计Default.aspx默认主页　14112.1.3　ASP.NET3.5的登录控件　14112.1.4　创建默认错误页面　14412.2　用户信息的存储　14412.2.1　查看创建的用户　14412.2.2　用.NET配置工具管理用户　14512.3　角色权限管理　14612.3.1　创建角色　14712.3.2　管理角色的访问权限　14812.4　测试角色的访问规则　14912.4.1　测试管理员访问权限　14912.4.2　测试普通用户访问权限　15012.5　代码设计技术要点　15012.5.1　使用.NET配置工具的注意事项　15012.5.2　在Web.config中指定默认错误页　15112.5.3　在程序中访问错误配置节　15112.5.4　管理Forms身份验证服务的类　15112.5.5　Membership类的功能　15212.5.6　Membership类在Web.config文件中如何配置　15212.5.7　使用Membership类管理用户　15312.5.8　MembershipUser：用户信息类　15312.5.9　在Web.config文件中配置角色管理　15512.5.10　使用Roles类管理角色　15512.5.11　将用户角色配置在自己的数据库中　15612.6　小结　157第13章　项目的测试　15813.1　软件的测试　15813.1.1　测试的目的　15813.1.2　测试的方法　15913.1.3　传统测试的问题及解决方案　15913.2　测试的工具　16013.2.1　VisualStudio2008中的NUnit　16013.2.2　用NUnit进行测试　161第14章　部署及发行　16514.1　书写软件的配置说明　16514.1.1　软件要求包括的文档　16514.1.2　软件运行环境的要求　16514.2　软件的部署　16614.2.1　整理软件运行需要的文件资源　16614.2.2　VisualStudio2008提供的部署模板　16614.2.3　创建Web安装项目　16714.2.4　裸机测试部署好的程序　16914.3　如何检验软件的质量　169第15章　客户关系管理系统CRM的设计　17015.1　CRM的分类和价值体现　17015.1.1　CRM的分类　17015.1.2　CRM的价值体现　17115.2　企业的CRM需求分析　17115.2.1　企业的需求列表　17115.2.2　分析企业的需求　17215.2.3　体验企业业务流程并确定最终需求　17215.3　系统模块设计　17215.3.1　根据需求确定模块内容　17315.3.2　分析功能模块并设计类图　17315.4　数据库设计　17515.4.1　数据库的表信息　17515.4.2　数据库的表关系　17915.4.3　数据库的操作类　18015.5　开发前期的项目构建　18015.5.1　创建项目　18015.5.2　设计母版页　180第16章　基础配置模块　18316.1　区域设置　18316.1.1　添加区域　18316.1.2　设计“选择区域”用户控件　18716.1.3　添加区域中的城市　18916.1.4　用主细表方式查看区域和城市　19216.2　客户等级设置　19316.2.1　客户等级的设计　19316.2.2　客户等级的代码实现　19416.3　客户状态设置　19516.4　客户业务类型设置　19616.5　部门设置　19616.6　基础配置模块集成测试　19816.7　代码设计技术要点　20016.7.1　DataList控件的属性和模板　20016.7.2　DataList控件如何使用　20016.7.3　XML文件的概念及用途　20116.7.4　XML文件的优缺点　20216.7.5　XML文件与HTML文件的区别　20216.7.6　XPath方法　20216.7.7　LINQ实体关系图　20316.8　小结　204第17章　客户管理模块　20517.1　客户资料的管理　20517.1.1　客户资料中常用的用户控件　20517.1.2　设计客户资料实体类　20617.1.3　设计客户资料实体方法　20717.1.4　添加客户资料　21017.1.5　修改客户资料　21117.1.6　设计GridView控件的模板列　21317.1.7　查询客户资料　21517.2　联系人资料的管理　21817.2.1　添加联系人　21817.2.2　修改联系人资料　22217.2.3　查询联系人　22317.2.4　联系人生日提醒功能　22417.3　客户管理模块集成测试　22517.4　代码设计技术要点　22617.4.1　SQLServer中的模糊查询　22617.4.2　LINQ的模糊查询　22617.4.3　日期控件的使用　22717.4.4　验证控件ValidationSummary的使用方法　22817.4.5　日期型数据的算术操作　22817.4.6　数据库空值DBNull的使用技巧　22917.4.7　LINQ实体类和实体类之间的关系　23017.4.8　LINQ的泛型查询结果IQueryable　23117.5　小结　231第18章　员工管理模块　23218.1　员工资料管理　23218.1.1　员工资料的实体类　23218.1.2　员工资料的实体方法　23418.1.3　实现对员工的添加和编辑　23518.2　工作日志管理　23718.2.1　设计日志的登记功能　23718.2.2　用主细表方式实现日志的查询　24018.3　联系记录管理　24218.3.1　为销售人员设计最近的联系记录　24218.3.2　用查询实现联系记录的快速浏览　24518.4　计划任务管理　24618.4.1　计划任务的实体和方法　24618.4.2　使用MultiView控件实现计划任务管理　24818.4.3　设计SqlDataSource的多表查询语句　25118.5　员工管理模块集成测试　25218.6　代码设计技术要点　25318.6.1　使用SQL语句查询区间范围与使用LINQ的区别　25318.6.2　LinqDataSource控件中参数的动态设置　25318.6.3　Page的首次加载属性IsPostBack　25418.6.4　提高Web页面性能的技巧　25418.7　小结　255第19章　客户服务管理模块　25619.1　客户投诉管理　25619.1.1　客户投诉功能的界面设计　25619.1.2　创建存储过程　25719.1.3　使用存储过程实现记录的添加(LINQ方式)　25819.1.4　用主细表方式实现对投诉的处理　25919.2　客户新需求管理　26119.2.1　客户新需求的登记　26119.2.2　用存储过程无代码实现需求的修改　26219.3　客户合同管理　26419.3.1　合同管理　26419.3.2　合同到期提示功能　26519.4　实施项目管理　26619.4.1　实施项目的总结　26619.4.2　认识ASP.NET的缓存　26819.4.3　页面缓存的使用方法　26819.4.4　用缓存提高实施项目的查询性能　26819.5　客户服务管理模块集成测试　27019.6　代码设计技术要点　27019.6.1　数据类型的比较方法CompareTo　27019.6.2　数据缓存Cache的使用　27119.6.3　存储过程中输出参数的使用　27219.6.4　SqlCommand命令中的输入输出参数　27219.7　小结　273第20章　OA系统的需求设计　27420.1　分析OA的用户需求　27420.1.1　中小企业的OA需求列表　27420.1.2　分析企业需求　27520.1.3　进行需求调研并确定最终需求　27520.2　设计OA的系统模块　27520.2.1　根据需求分析模块　27620.2.2　设计各模块的类和方法　27720.3　为OA系统构建数据库　27820.3.1　根据需求构建数据库　27820.3.2　.NET3.5自动生成的数据库　28120.4　开发前期的项目构建　28220.4.1　使用Menu控件搭建OA系统的项目模板　28320.4.2　为系统添加数据库实体类　284第21章　管理者特区设置模块　28521.1　使用MultiView控件设置权限　28521.1.1　管理角色　28521.1.2　用户的管理　28721.1.3　赋予用户角色权限　28921.2　考勤设置　29021.3　部门设置　29321.4　公告管理　29521.4.1　发布公告　29521.4.2　滚动显示公告内容　29621.5　管理者特区集成测试　29721.6　代码设计技术要点　29821.6.1　SQLServer的日期函数　29821.6.2　服务器端如何动态输出脚本块　29921.6.3　引用母版页中的内容　30021.6.4　Menu控件的特色　30121.6.5　以编程方式访问Menu控件　30121.7　小结　302第22章　个人办公室管理模块　30322.1　密码管理　30322.1.1　设计登录界面　30322.1.2　修改密码　30422.1.3　找回密码　30522.1.4　使用SMTP虚拟服务器发送邮件　30622.2　短信息管理　30722.2.1　发送短信息　30722.2.2　接收短信息　30822.2.3　查看发送信息记录　31122.3　邮箱管理　31222.3.1　邮件的SMTP设置　31222.3.2　发送邮件　31422.3.3　接收邮件　31622.4　个人日程安排　31722.4.1　日程安排　31722.4.2　当日日程提醒功能　31922.5　个性化设置　32022.5.1　Profile的配置　32022.5.2　使用Profile实现个性化网页　32022.6　个人办公室管理模块集成测试　32222.7　代码技术要点分析　32322.7.1　获取登录用户的信息　32322.7.2　POP3和SMTP　32422.7.3　用ProfileSection实现配置文件的编辑　32422.8　小结　325第23章　信息共享区管理模块　32623.1　知识库资料管理　32623.1.1　文件的上传　32623.1.2　浏览服务器上的文件　32823.1.3　文件的下载　33023.1.4　文件的查询　33223.2　在线人员管理　33323.2.1　查看在线人员　33323.2.2　向在线人员发送信息　33523.2.3　当前用户的登录和注销　33523.3　浏览公告历史记录　33623.4　信息服务管理　33723.4.1　用WebService实现天气预报　33723.4.2　在程序中使用WebService　33823.5　信息共享区管理模块集成测试　33923.6　代码技术要点分析　34023.6.1　WebService的概念　34023.6.2　WebService在.NET中的应用　34123.6.3　文件和目录操作的类　34123.6.4　用代码创建DataTable　34323.6.5　获取网站中其他网页的内容　34323.7　小结　344第24章　人力资源管理模块　34524.1　工资管理　34524.1.1　工资计算公式的设计　34524.1.2　工资的发放　34924.2　绩效管理　35224.2.1　考核员工　35224.2.2　查询员工考核记录　35424.3　培训管理　35524.4　招聘管理　35524.4.1　空缺申报　35524.4.2　空缺查看并处理　35724.5　人力资源管理模块集成测试　35824.6　简单OA系统集成测试　35824.7　代码技术要点分析　36024.7.1　字符串的操作方法　36124.7.2　SelectedText、SelectedValue、SelectedItem3者的区别　36124.7.3　LoginStatus控件的使用　36224.8　小结　362第25章　网上书店的设计　36325.1　书店系统的用户需求　36325.1.1　用户根据业务流程提出需求　36325.1.2　项目小组分析用户的需求　36425.1.3　与用户一起确定最终需求　36425.2　根据需求设计系统的功能　36425.2.1　划分系统的功能模块　36425.2.2　设计各模块的功能及方法　36525.3　根据功能设计数据库　36625.3.1　数据库中的表结构　36625.3.2　数据库的操作类（LINQ）　36925.4　构建项目模板　36925.4.1　创建项目　36925.4.2　设计项目的母版页　37025.4.3　设计网站的默认Default页　37025.5　小结　371第26章　目录管理模块　37226.1　用户的登录　37226.1.1　用户的注册　37226.1.2　用户的登录　37326.1.3　显示用户的登录状态　37526.2　浏览网站中的书籍目录　37526.2.1　添加书籍的分类目录　37526.2.2　浏览书籍的分类目录　37826.2.3　删除书籍的分类目录　38026.3　目录管理模块集成测试　38326.3.1　后台管理页面　38326.3.2　获取母版页中的导航列表　38426.4　代码设计技术要点　38526.4.1　Web.config中的验证属性authentication　38526.4.2　泛型　38626.4.3　泛型的优缺点　38626.4.4　LINQ数据集到泛型集合的转换　38726.4.5　用Repeater控件绑定单个数据项　38726.5　小结　388第27章　图书管理模块　38927.1　商品供应商管理　38927.1.1　设计供应商管理功能的界面　38927.1.2　实现供应商管理功能　39027.2　图书资料管理　39127.2.1　图书入库功能的界面设计　39227.2.2　图书入库功能的代码实现　39227.2.3　图书资料的修改　39627.2.4　图书浏览功能　39727.2.5　图书搜索功能　39927.3　图书管理模块集成测试　40227.4　代码设计技术要点　40227.4.1　正则表达式操作类Regex　40327.4.2　判断数据库中字段是否为空　40427.4.3　分析字符串方法Split　40527.4.4　LINQ中的事务处理机制　40527.5　小结　406第28章　购物篮管理模块　40728.1　显示商品详细信息　40728.1.1　设计购物界面　40728.1.2　设计购物功能　40828.2　添加商品到购物篮　40928.2.1　设计购物篮界面　41028.2.2　自定义配置文件提供程序ProfileProvider　41128.2.3　实现购物篮内容的添加和保存　42528.3　购物篮中商品的价格计算、修改和删除　42928.3.1　修改购物篮中图书的数量　43028.3.2　计算购物篮内的总价值　43028.3.3　移除购物篮中的商品　43228.4　集成测试注意事项　43228.5　代码设计技术要点　43328.5.1　Dictionary集合　43328.5.2　ProfileProvider配置提供程序　43428.6　小结　435第29章　订单管理模块　43629.1　自定义账户地址　43629.1.1　在母版页中实现下订单功能　43629.1.2　在购物篮中实现提交订单功能　43729.1.3　设计账户地址用户控件　43729.1.4　保存账户地址信息　44029.1.5　账户地址的Profile设置　44129.2　送货地址　44329.3　银行卡支付信息　44429.4　提交订单　44629.4.1　设计地址确认控件　44629.4.2　在订单中实现地址确认功能　44629.5　订单完成　44729.5.1　设计所购商品的显示控件　44729.5.2　设计订单的完成功能　44829.6　代码设计技术要点　45329.6.1　Wizard控件的概述　45329.6.2　Wizard控件的使用　45329.6.3　SQLServer的系统函数　45429.7　小结　455……精通ASP.NET 3.5企业级开发前言编辑网络已经成为我们工作和生活不可缺少的一部分，随着网络时代的到来，开发网络应用软件成了炙手可热的职业。越来越多的人学习制作个人网站、门户网站、企业服务网站。Microsoft公司.NET技术的推出，使网站的开发变得轻松自如。.ASP已经渐渐退出了历史的舞台。.NET技术已经成为网络应用的主流，它提高了界面和代码的可定制性，更适合于大型网络系统。目前的网络服务已经不仅仅是为企业制作网站，而是利用企业的网络资源，为企业量身定做一套提高效率的应用软件系统。本书从4个实例出发，结合一些企业的需求，详细讲述了如何利用软件为企业带来更大的价值体现。为了帮助更多的软件开发人员提高软件的开发水平，笔者精心编著了本书。本书依照软件工程的开发步骤，首先介绍需求分析，在读者掌握了企业有什么需求后，再介绍根据需求设计功能模块和数据库的方法。书中的讲述严格按照分析→设计→开发→测试的步骤进行，并详细介绍了各个步骤中的辅助工具。本书在内容的编排和目录组织上都十分慎重，力争让读者能够快速掌握软件的使用方法。比如在每章的最后一节，都详细介绍了该章所涉及的知识点，并附以代码示范，让读者掌握这些技术的使用方法。介绍实例开发的各章统一按照功能命名，这样读者就可以明确知道每一章将要学到什么知识。本书的特点1．版本最新，与时俱进采用最新的ASP.NET 3.5技术，使用Visual Studio 2008开发环境，在讲解各个实例的时候结合了它的新功能。2．采用多个版本的数据库查询方式在数据库查询方面，既介绍了常见的SQL查询方式，也介绍了最新的LINQ查询方式。3．步骤清晰，说明详细在具体介绍软件功能的时候，为了让读者从一开始就能知道这个功能的实现方法，本书提供了详细的图例，说明功能是如何开始、如何实现、如何返回结果的。此外，在图例中稍显复杂的地方，还提供了详细的标注，让读者一看就明白整个功能的设计原理和实现手段。4．取材广泛，内容充实本书根据笔者多年来的开发经验和真正的客户需求，从企业必需的应用软件着手，详细介绍了如何设计和实现各个功能。在4个实例中，使用了不同的方法实现相同的导航功能，让读者更加了解.NET 3.5中各个导航类。5．讲解通俗，可读性强每个实例的制作步骤都以通俗易懂的语言进行讲述，读者只需要按照步骤操作，就可以轻松地完成一个应用软件的制作，不但掌握了开发步骤，还掌握了开发技巧。本书的内容第1章介绍企业有需求后开发人员该如何处理。第2章介绍接到一个项目后开发人员该如何安排项目计划。第3章介绍如何初步设计接到的软件项目。第4章讲述如何组合项目中的各个功能，并进行详细设计和模块划分。精通ASP.NET 3.5企业级开发书摘编辑第1章用户需求的分析与处理1.2.2分析并确定调研结果分析人员将需求调研的结果带回公司，写出调研报告。召开会议研讨时开发人员和项目经理等所有参与此项目的人都要参加，要根据报告一条条地分析具体流程的有效性和可行性，从软件的角度完善其中的细节；不清晰的地方要再与用户进行沟通，争取做到每个人都清楚地明白用户究竟需要什么样的功能。研讨完毕后，将可行需求和不可行需求（包括有局限性的需求）分列记录，并在不可行需求中详细注明原因，最后说明软件的目的及功能。在本例中，不可行需求的列表如下。（1）新会员卡使用磁卡及防伪标志。使用磁卡可以，但必须具备扫描磁卡的专用设备，仅仅依靠软件无法实现。防伪标志的使用由用户自己决定，也不能通过软件实现。（2）办卡人员不能以各种名目向办卡人索取钱财或其他报酬。软件不是万能的，无法监督办卡人员，此需求只能由用户管理部门实施各种监管制度来满足。（3）卡的级别由超市自己决定，并根据市场行情随时做出变化。由于卡的级别与卡的消费记录和客户信息等关联在一起，所以如果删除卡的级别，则有可能导致客户信息丢失或消费记录混乱等情况，所以建议卡的级别一旦建立，不要随便删除。（4）会员卡如果遗失，超市方面给予补办，但不补积分。会员卡是通过身份证号来确定的，一人只办一张，如果顾客遗失，重新办理时，旧的客户资料、积分以及消费记录等都存在，却不给顾客补积分，这样明显与以前的历史记录冲突。建议要么不给补办，要么补卡同时补积分。（5）换卡顾客因为没有历史手工数据的记录，所以新卡中无积分。顾客手中有卡，说明在此消费过，应考虑是否允许顾客凭借以前的销售单据补积分。（6）由于用户已经存在一套销售系统，为了不冲突，建议会员卡积分统一到服务台办理，与款台分离。对于有局限性的需求一定要仔细推敲，并与用户紧密沟通，达成改善的意见。可行性列表将在下一节详细介绍。软件的目的是提高用户的工作效率，细分员工的工作职责，协调部门之间的业务往来，监督业务运行的过程。该软件的主要功能如下。……词条标签：出版物，书籍